(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{331:function(e,t,o){var content=o(354);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,o(125).default)("72c3c41f",content,!0,{sourceMap:!1})},352:function(e,t){function o({personalAccessToken:e,fetchFunc:t}){this._personalAccessToken=e,this._fetchFunc=t}o.prototype.get=async function(e,t){const o=t?"?"+new URLSearchParams(t).toString():"",n=await this._fetchFunc(`https://api.figma.com/v1/${e}${o}`,{headers:{"X-Figma-Token":this._personalAccessToken}});if(n.status>=400){let e="";try{e+=(await n.json()).err}finally{throw new Error(`HTTP error ${n.status} accessing Figma. ${e}`)}}return n.json()};const n=function({file:e,nodeIds:t}){function o(e,t){return e===t.id?t:t.children?t.children.map((t=>o(e,t))).find(Boolean):null}return t.map((t=>o(t,e.document)))},r=function({file:e,names:t}){function o(e,t){return e===t.name&&"FRAME"===t.type?t.id:t.children?t.children.map((t=>o(e,t))).find(Boolean):null}return t.map((t=>o(t,e.document)))};async function c({api:e,fileKey:t,assetList:o,scales:n=[1],format:r="png"}){const c={},l=await Promise.all(n.map((n=>async function(n){return e.get(`images/${t}`,{ids:Object.values(o),format:r,scale:n})}(n))));return n.forEach(((e,t)=>{for(const n of Object.keys(o)){const r=o[n];c[n]=c[n]||{id:r},c[n][`@${e}x`]=l[t].images[r]}})),c}async function l({frameIds:e=[],frameNames:t=[],fileKey:l,personalAccessToken:h,scales:m=[1],format:d="png",fetchFunc:f=((...e)=>window.fetch(...e))}){const y=new o({personalAccessToken:h,fetchFunc:f}),v=await y.get(`files/${l}`);t.length&&(e=[...e,...r({file:v,names:t})]);const L=n({file:v,nodeIds:e}).filter(Boolean);if(!L.length)throw new Error(`No matching frames for ${e}, ${t}`);const F=function(e){const t={};for(const o of e.filter(Boolean))for(const e of o.children)t[e.name]=e.id;return t}(L);return await c({api:y,fileKey:l,assetList:F,scales:m,format:d})}function h(map,e){for(const t of Object.keys(e)){const o=Math.max(...Object.keys(e[t]).filter((e=>"@"===e[0])).map((e=>+e.replace(/[^0-9.]/g,""))));map.loadImage(e[t][`@${o}x`],((e,image)=>{map.addImage(t,image,{pixelRatio:o})}))}}e.exports={getFigmaIconsByFrames:l,getFigmassets:l,addAssetsToMap:h,loadFigmassets:async function({map:map,...e}){map&&!e.scales&&(e.scales=[2]);const t=await l(e);return map&&h(map,t),t},loadStoredFigmassets:async function({map:map,path:path=""}){path&&(path=path.replace(/([^/])$/,"$1/"));const e=await fetch(`${path}assets.json`).then((e=>e.json()));for(const t of e)map.loadImage(`${path}${t.fileName}`,((e,image)=>{map.addImage(t.id,image,{pixelRatio:t.scale})}))}}},353:function(e,t,o){"use strict";o(331)},354:function(e,t,o){var n=o(124)(!1);n.push([e.i,".map,.mapboxgl-map{height:100%;width:100%}.map.hovered{cursor:pointer}",""]),e.exports=n},382:function(e,t,o){"use strict";o.r(t);var n=o(43),r=(o(80),o(28),o(11),o(31),o(352)),c=o(23),l={data:function(){return{accessToken:c.i,flyToInProgress:!1,maximumExtent:c.k,style:c.j,hovered:!1,center:c.g,zoom:c.h}},computed:{locationsLayer:function(){return{id:"locations",type:"symbol",layout:{"icon-allow-overlap":!0,"icon-image":["concat","marker_",["get","sectorSlug"]],"icon-size":["interpolate",["linear"],["zoom"],12,.5,16,1.5]},filter:this.sectorFilter}},locationsSource:function(){return{data:this.locationsGeoJson}},locationsGeoJson:function(){return this.$store.getters["data/locationsGeoJson"]},highlightedFeatures:function(){return this.$store.getters["map/highlightedFeatures"]},selectedSectors:function(){return this.$store.state.filters.sectors},sectorFilter:function(){return["any"].concat(Object(n.a)(this.selectedSectors.map((function(e){return["in",e,["get","Sector"]]}))))},storeCenter:function(){return this.$store.state.map.center},storeZoom:function(){return this.$store.state.map.zoom},unselectedLayers:function(){return this.$store.getters["layerPicker/unselectedLayers"]},selectedLayers:function(){return this.$store.getters["layerPicker/selectedLayers"]}},methods:{mapLoaded:function(e){var map=e.map;this.map=map,this.map.jumpTo({center:this.storeCenter,zoom:this.storeZoom}),Object(r.loadStoredFigmassets)({map:map,path:"map-assets/assets@2x"})},handleClick:function(e){var t=this.map.queryRenderedFeatures(e.mapboxEvent.point,{layers:[this.locationsLayer.id]});this.$store.dispatch("popup/setSelectedFeatures",{selectedFeatures:t})},handleMouseMove:function(e){var t=e.mapboxEvent.features[0];if(t){var o=t.layer.id,n=t.id;this.$store.dispatch("map/setHoveredFeature",{layer:o,id:n})}else this.$store.dispatch("map/setHoveredFeature",{});this.hovered=!0},handleMouseLeave:function(){this.$store.dispatch("map/setHoveredFeature",{}),this.hovered=!1},handleMove:function(){if(!this.flyToInProgress){var e=this.map.getCenter(),t=this.map.getZoom();this.$store.dispatch("map/setPosition",{center:e,zoom:t})}},handleMoveEnd:function(){this.flyToInProgress=!1},moveToStorePosition:function(){this.map&&!this.flyToInProgress&&(this.map.getCenter().lat===this.storeCenter.lat&&this.map.getCenter().lng===this.storeCenter.lng&&this.map.getZoom()===this.storeZoom||(this.flyToInProgress=!0,this.map.flyTo({center:this.storeCenter,zoom:this.storeZoom})))},changeLayersVisibility:function(e,t){var o=this;e.forEach((function(e){o.map.setLayoutProperty(e,"visibility",t)}))},hideUnselectedLayers:function(){var e=this;this.unselectedLayers.forEach((function(t){e.changeLayersVisibility(t.layerIds,"none")}))},showSelectedLayers:function(){var e=this;this.selectedLayers.forEach((function(t){e.changeLayersVisibility(t.layerIds,"visible")}))}},watch:{unselectedLayers:function(){this.hideUnselectedLayers()},selectedLayers:function(){this.showSelectedLayers()},sectorFilter:function(){this.map&&this.map.setFilter(this.locationsLayer.id,this.sectorFilter)},highlightedFeatures:function(e,t){var o,n,r,c,l=null==e||null===(o=e[0])||void 0===o?void 0:o.layer,h=e.map((function(e){return e.id}));l&&h?(n=["case",["in",["get","ID"],["literal",h]],["concat","marker_",["get","sectorSlug"],"_highlight"],["concat","marker_",["get","sectorSlug"]]],r=["case",["in",["get","ID"],["literal",h]],1,0]):(l=(null!==(c=null==t?void 0:t[0])&&void 0!==c?c:{}).layer,n=["concat","marker_",["get","sectorSlug"]],r=0);l&&(this.map.setLayoutProperty(l,"icon-image",n),this.map.setLayoutProperty(l,"symbol-sort-key",r))},storeCenter:function(){this.moveToStorePosition()},storeZoom:function(){this.moveToStorePosition()}}},h=(o(353),o(65)),component=Object(h.a)(l,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("client-only",[o("MglMap",{class:{map:!0,hovered:e.hovered},attrs:{mapStyle:e.style,accessToken:e.accessToken,center:e.center,maxBounds:e.maximumExtent,zoom:e.zoom},on:{click:e.handleClick,load:e.mapLoaded,move:e.handleMove,moveend:e.handleMoveEnd}},[o("MglGeojsonLayer",{attrs:{sourceId:"locations",source:e.locationsSource,layer:e.locationsLayer,layerId:e.locationsLayer.id},on:{mousemove:e.handleMouseMove,mouseleave:e.handleMouseLeave}})],1)],1)}),[],!1,null,null,null);t.default=component.exports}}]);